Bug Tracker

Class: Rectangle

    Bug 1:

        Describe the bug/error:
        getPerimeter() is adding width and height together, which is not the formula for getting the perimeter of a rectangle

        Where was the bug? (function, line number)
        Function: getPerimeter()
        Line: 52

        What test helped you find the bug?
        getPerimeter_shouldReturn_thePerimeterOfRectangle()

        What did you do to fix the bug?
        Changed the return statement to the proper formula for calculating the perimeter of a rectangle

    Bug 2:

        Describe the bug/error:
        getArea() does not check if the height or width is negative, so it calculates a negative area.

        Where was the bug? (function, line number)
        Function: getArea()
        Line: 40

        What test helped you find the bug?
        getArea_shouldReturnZero_whenWidthOrHeightIsZeroOrLess()

        What did you do to fix the bug?
        Added a conditional statement that returns 0 if the width or height is 0 or less.


Class: Quiz

    Bug 1:

        Describe the bug/error:
        getPercent() was returning 0 every time, because integer division was truncating the decimals off

        Where was the bug? (function, line number)
        Function: getPercent()
        Line: 37

        What test helped you find the bug?
        getPercent_shouldReturn_percentage()

        What did you do to fix the bug?
        Multiplied score by 100 first, instead of last, so the calculation is never less than 1.

    Bug 2:

        Describe the bug/error:
        getLetterGrade() is not returning the correct letter grade because it is not inclusive of the boundaries. It is also not accounting for letter grade D correctly.

        Where was the bug? (function, line number)
        Function: getLetterGrade()
        Line: 44

        What test helped you find the bug?
        getLetterGrade_shouldReturn_theCorrectLetterGrade_forF()

        What did you do to fix the bug?
        Made all signs >= instead of > and modified the condition for returning D

*** Optional / Challenge ***



Class: GameCharacter

    Bug 1:

        Describe the bug/error:
        GameCharacter is constructed with 0 energyLevel

        Where was the bug? (function, line number)
        Function: GameCharacter
        Line: 29

        What test helped you find the bug?
        takeHit_shouldReduceEnergyLevel_byAmountOfEnergySpecified()

        What did you do to fix the bug?
        Initialized energyLevel to maxEnergyLevel

    Bug 2:

        Describe the bug/error:
        energyLevel is able to fall below 0

        Where was the bug? (function, line number)
        Function: takeHit()
        Line: 32

        What test helped you find the bug?
        takeHit_shouldNotReduce_energyLevelBelowZero()

        What did you do to fix the bug?
        Added a condition that if damage > energyLevel, set energyLevel to 0

    Bug 3:

        Describe the bug/error:
        energyLevel is able to go above maxEnergyLevel when calling heal()

        Where was the bug? (function, line number)
        Function: heal()
        Line: 37

        What test helped you find the bug?
        heal_shouldNotIncreaseEnergyLevel_AboveMaxEnergyLevel()

        What did you do to fix the bug?
        Added a condition to check if energyLevel + heal amount would go above maxEnergyLevel

    Bug 4:

        Describe the bug/error:
        GameCharacter is able to heal even at 0 energyLevel

        Where was the bug? (function, line number)
        Function: heal()
        Line: 39

        What test helped you find the bug?
        heal_shouldNotIncreaseEnergyLevel_ifEnergyLevelIsZero()

        What did you do to fix the bug?
        Added a condition to check if energyLevel != 0.


Class: Printer

    Bug 1:

        Describe the bug/error:
        Print() is able to print even when the number of prints to make is a negative number

        Where was the bug? (function, line number)
        Function: print()
        Line: 27

        What test helped you find the bug?
        print_shouldNotPrint_whenPagesToPrintIsLessThanZero()

        What did you do to fix the bug?
        Added a conditional to check if pages to print is less than zero

    Bug 2:

        Describe the bug/error:
        Toner is able to exceed max capacity when calling replaceToner()

        Where was the bug? (function, line number)
        Function: replaceToner()
        Line: 55

        What test helped you find the bug?
        replaceToner_shouldResetToner_toMaxCapacity()

        What did you do to fix the bug?
        Replaced the += to just =, because toner will always be reset to max capacity when replaceToner() is called

    Bug 3:

        Describe the bug/error:
        addPaper() is able to add sheets beyond max sheet capacity

        Where was the bug? (function, line number)
        Function: addPaper()
        Line: 43

        What test helped you find the bug?
        addPaper_shouldNotAddSheets_beyondMaxSheetCapacity()

        What did you do to fix the bug?
        Replaced the += to just =, because toner will always be reset to max capacity when replaceToner() is called

    Bug 4:

        Describe the bug/error:
        addPaper() is able to add sheets when sheets to add is negative

        Where was the bug? (function, line number)
        Function: addPaper()
        Line: 43

        What test helped you find the bug?
        addPaper_shouldNotAddSheets_ifSheetsToAddAreNegative()

        What did you do to fix the bug?
        Added a condition to check if sheets to add is less than zero